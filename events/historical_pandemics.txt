namespace = historical_pandemics

# 1968 Flu Pandemic
historical_pandemics.1 = {
    type = country_event
	placement = scope:plague_origin_state

    title = H3N2_1968.t 										# Title of the event; ADD LOCALISATION
    desc = H3N2_1968.d 											# Description of the event; ADD LOCALISATION
    #flavor = H3N2_1968.f 										# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/unspecific_sick_in_hospital.bk2" }

    icon = "gfx/interface/icons/invention_icons/pharmaceuticals.dds" 	# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		NOT = { has_global_variable = spanish_flu }
		game_date >= 1968.7.13									# START DATE: Date colony became self governing ****
		game_date < 1978.7.13									# END DATE: All historical events must not fire 10 years after the START DATE ****
		has_state_in_state_region = STATE_GUANGDONG
		
		#Cause of virus
		institution_investment_level = {
			institution = institution_health_system
			value < 3
		}
		
		# Event has not been fired before
		NOT = { has_variable = H3N2_1968_hp }					# CHANGE ****
		
    }
    
    immediate = {
		
		# Fire only once
		set_variable = H3N2_1968_hp								# Change variable ****
		
		set_global_variable = {
			name = spanish_flu
		}
		set_variable = {
			name = plague_originator
		}
		save_scope_as = plague_originator_country
		random_scope_state = {
			limit = {
				state_region = s:STATE_GUANGDONG
			}
			save_scope_as = plague_origin_state
			set_variable = plague_originator_state
			randomize_plague_level_effect = yes
			add_plague_modifier_effect = yes
		}
	}

	option = {
		name = plague.1.a
		default_option = yes
		scope:plague_origin_state = {
			custom_tooltip = plague_state_mortality.tt
		}
		custom_tooltip = plague_decisions_available.tt
		hidden_effect = {
			every_country = {
				limit = {
					NOT = { this = ROOT }
					is_player = yes
				}
				trigger_event = { id = plague.4 }
			}
		}
		add_journal_entry = { type = je_spanish_flu }
		set_variable = country_hit_by_plague # so that countries cannot get JE multiple times
	}

}

# SARS 2003
historical_pandemics.2 = {
    type = country_event
	placement = scope:plague_origin_state

    title = SARS_2003.t 										# Title of the event; ADD LOCALISATION
    desc = SARS_2003.d 											# Description of the event; ADD LOCALISATION
    #flavor = SARS_2003.f 										# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/unspecific_sick_in_hospital.bk2" }

    icon = "gfx/interface/icons/invention_icons/pharmaceuticals.dds" 	# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		NOT = { has_global_variable = spanish_flu }
		game_date >= 2002.11.1									# START DATE: Date colony became self governing ****
		game_date < 2012.11.1									# END DATE: All historical events must not fire 10 years after the START DATE ****
		has_state_in_state_region = STATE_GUANGDONG
		
		#Cause of virus
		institution_investment_level = {
			institution = institution_health_system
			value < 3
		}
		
		# Event has not been fired before
		NOT = { has_variable = SARS_2003_hp }					# CHANGE ****
		
    }
    
    immediate = {
		
		# Fire only once
		set_variable = SARS_2003_hp								# Change variable ****
		
		set_global_variable = {
			name = spanish_flu
		}
		set_variable = {
			name = plague_originator
		}
		save_scope_as = plague_originator_country
		random_scope_state = {
			limit = {
				state_region = s:STATE_GUANGDONG
			}
			save_scope_as = plague_origin_state
			set_variable = plague_originator_state
			randomize_plague_level_effect = yes
			add_plague_modifier_effect = yes
		}
	}

	option = {
		name = plague.1.a
		default_option = yes
		scope:plague_origin_state = {
			custom_tooltip = plague_state_mortality.tt
		}
		custom_tooltip = plague_decisions_available.tt
		hidden_effect = {
			every_country = {
				limit = {
					NOT = { this = ROOT }
					is_player = yes
				}
				trigger_event = { id = plague.4 }
			}
		}
		add_journal_entry = { type = je_spanish_flu }
		set_variable = country_hit_by_plague # so that countries cannot get JE multiple times
	}

}

# 2009 H1N1 Pandemic
historical_pandemics.3 = {
    type = country_event
	placement = scope:plague_origin_state

    title = H1N1_2009.t 										# Title of the event; ADD LOCALISATION
    desc = H1N1_2009.d 											# Description of the event; ADD LOCALISATION
    #flavor = H1N1_2009.f 										# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/unspecific_sick_in_hospital.bk2" }

    icon = "gfx/interface/icons/invention_icons/pharmaceuticals.dds" 	# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		NOT = { has_global_variable = spanish_flu }
		game_date >= 2009.6.1									# START DATE: Date colony became self governing ****
		game_date < 2019.6.1									# END DATE: All historical events must not fire 10 years after the START DATE ****
		has_state_in_state_region = STATE_VERACRUZ
		
		#Cause of virus
		institution_investment_level = {
			institution = institution_health_system
			value < 3
		}
		
		# Event has not been fired before
		NOT = { has_variable = H1N1_2009_hp }					# CHANGE ****
		
    }
    
    immediate = {
		
		# Fire only once
		set_variable = H1N1_2009_hp								# Change variable ****
		
		set_global_variable = {
			name = spanish_flu
		}
		set_variable = {
			name = plague_originator
		}
		save_scope_as = plague_originator_country
		random_scope_state = {
			limit = {
				state_region = s:STATE_VERACRUZ
			}
			save_scope_as = plague_origin_state
			set_variable = plague_originator_state
			randomize_plague_level_effect = yes
			add_plague_modifier_effect = yes
		}
	}

	option = {
		name = plague.1.a
		default_option = yes
		scope:plague_origin_state = {
			custom_tooltip = plague_state_mortality.tt
		}
		custom_tooltip = plague_decisions_available.tt
		hidden_effect = {
			every_country = {
				limit = {
					NOT = { this = ROOT }
					is_player = yes
				}
				trigger_event = { id = plague.4 }
			}
		}
		add_journal_entry = { type = je_spanish_flu }
		set_variable = country_hit_by_plague # so that countries cannot get JE multiple times
	}

}

# 2019 COVID-19 Pandemic
historical_pandemics.4 = {
    type = country_event
	placement = scope:plague_origin_state

    title = COVID_2019.t 										# Title of the event; ADD LOCALISATION
    desc = COVID_2019.d 										# Description of the event; ADD LOCALISATION
    #flavor = COVID_2019.f 										# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/unspecific_sick_in_hospital.bk2" }

    icon = "gfx/interface/icons/invention_icons/pharmaceuticals.dds" 	# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		NOT = { has_global_variable = spanish_flu }
		game_date >= 2019.12.1									# START DATE: Date colony became self governing ****
		game_date < 2029.12.1									# END DATE: All historical events must not fire 10 years after the START DATE ****
		has_state_in_state_region = STATE_EASTERN_HUBEI
		
		#Cause of virus
		institution_investment_level = {
			institution = institution_health_system
			value < 3
		}
		
		# Event has not been fired before
		NOT = { has_variable = COVID_2019_hp }					# CHANGE ****
		
    }
    
    immediate = {
		
		# Fire only once
		set_variable = COVID_2019_hp							# Change variable ****
		
		set_global_variable = {
			name = spanish_flu
		}
		set_variable = {
			name = plague_originator
		}
		save_scope_as = plague_originator_country
		random_scope_state = {
			limit = {
				state_region = s:STATE_EASTERN_HUBEI
			}
			save_scope_as = plague_origin_state
			set_variable = plague_originator_state
			randomize_plague_level_effect = yes
			add_plague_modifier_effect = yes
		}
	}

	option = {
		name = plague.1.a
		default_option = yes
		scope:plague_origin_state = {
			custom_tooltip = plague_state_mortality.tt
		}
		custom_tooltip = plague_decisions_available.tt
		hidden_effect = {
			every_country = {
				limit = {
					NOT = { this = ROOT }
					is_player = yes
				}
				trigger_event = { id = plague.4 }
			}
		}
		add_journal_entry = { type = je_spanish_flu }
		set_variable = country_hit_by_plague # so that countries cannot get JE multiple times
	}

}
je_elections_system = {
	icon = "gfx/interface/icons/event_icons/event_election.dds"

	group = je_group_internal_affairs

	scripted_button = je_elections_system_electoral_fraud_button

	possible = {
		in_election_campaign = yes
	}
	
	immediate = {
	
		#Reshuffle Opposition IG leaders (1 politician per election)
		if = {
			limit = { 
				is_at_war = no
			}
			random_interest_group = {
				limit = { 
					is_in_government = no
					leader = { 
						is_historical = no 
						is_ruler = no
					}
				}
				leader = {
					random_list = {
						1 = { 
							if = {
								limit = { NOT = { has_modifier = political_survivor } }
								add_modifier = { name = political_survivor years = 5 }
							}
						}
						1 = { 
							save_scope_as = stepping_down_politician_scope
							#post_notification = ig_leader_has_stepped_down
							kill_character = yes
						}
					}
				}
			}
		}
		
		#Retire elderly opposition interest group leaders (1 per election)
		if = {
			limit = { 
				is_at_war = no
			}
			random_interest_group = {
				limit = { 
					is_in_government = no
					leader = { 
						OR = { 
							AND = { 
								is_historical = yes
								age >= 90
							}
							age >= 80
						}
					}
				}
				leader = {
					save_scope_as = retiring_politician_scope
					#post_notification = ig_leader_has_retired
					kill_character = yes
				}
			}
		}
	
		#Mark ruler
		if = {
			limit = { exists = ruler }
			ruler = {
				save_scope_as = the_current_ruler_scope
				interest_group = { save_scope_as = the_current_ruler_scope_ig_scope }
			}
		}
		
		#Add momentum diplay
		if = {
			limit = { in_election_campaign = yes }
			calculate_election_momentum_fluctuation = yes
		}
		
	}

	complete = {
		in_election_campaign = no
	}
	
	on_complete = {
		
		#Select ruler if a regime
		if = {
			limit = { 
				is_a_regime_type_government = yes 
				NOT = { has_variable = committed_electoral_fraud }
			}
			custom_tooltip = {
				text = semi_dictatorial_transfer_of_power.tt
				random_interest_group = {
					limit = { 
						is_in_government = yes
						is_strongest_ig_in_government = yes
					}
					leader = { set_character_as_ruler = yes }
				}
			}
		}
		
		#Electoral fraud
		if = {
			limit = { has_variable = committed_electoral_fraud }
			custom_tooltip = {
				text = electoral_fraud_committed.tt
				random_interest_group = {
					limit = { is_interest_group_type = scope:the_current_ruler_scope_ig_scope }
					leader = { set_character_as_ruler = yes }
					add_ruling_interest_group = yes
				}
			}
		}
		remove_variable = committed_electoral_fraud
		
		#Update upper house
		if = {
			limit = { has_journal_entry = je_upper_house }
			calculate_upper_house_composition = yes
		}
		
		#Update lower house
		if = {
			limit = { has_journal_entry = je_lower_house }
			calculate_lower_house_composition = yes
		}
		
		#Historical elections
		fire_historical_election_event = yes
		
		#Clear variables
		remove_variable = election_fluctuation_net_display
		remove_variable = election_fluctuation_economy_display
		remove_variable = election_fluctuation_politics_display
		remove_variable = election_fluctuation_government_display
		remove_variable = election_fluctuation_corruption_display
		
	}
	
	on_weekly_pulse = {
		
		# Election Events
		random_events = {
			20 = 0
			1 = election_liberal_events.1
			1 = election_liberal_events.2
			1 = election_liberal_events.3
			1 = election_liberal_events.4
			1 = election_conservative_events.1
			1 = election_conservative_events.2
			1 = election_conservative_events.3
			1 = election_conservative_events.4
			1 = election_moderate_events.1
			1 = election_moderate_events.2
			1 = election_contextual_events.1
			1 = election_contextual_events.2
			1 = election_contextual_events.3
			1 = election_contextual_events.4
			1 = election_contextual_events.5
			1 = election_contextual_events.6
			1 = election_contextual_events.7
			1 = election_contextual_events.8
			1 = election_neutral.1
			1 = election_neutral.2
			1 = election_neutral.3
			1 = election_neutral.4
			1 = election_neutral.5
			1 = election_neutral.6
			1 = election_neutral.7
			1 = election_neutral.8
			1 = election_other_parties_events.1
			1 = election_other_parties_events.2
			1 = election_other_parties_events.3
			1 = election_other_parties_events.4
			1 = election_other_parties_events.5
			1 = ig_leaders.3
			1 = communist_elections.1
			1 = communist_elections.2
			1 = communist_elections.3
			1 = communist_elections.4
		}
		random_events = {
			20 = 0
			1 = agitators_election_events.1
			1 = agitators_election_events.2
			1 = agitators_election_events.3
			1 = agitators_election_events.4
			1 = agitators_election_events.5
			1 = agitators_election_events.6
			1 = agitators_election_events.7
			1 = agitators_election_events.8
			1 = agitators_election_events.9
			1 = agitators_election_events.10
			1 = agitators_election_events.11
			1 = agitators_election_events.12
			1 = agitators_election_events.13
			1 = agitators_election_events.14
			1 = agitators_election_events.15
			1 = agitators_election_events.16
			1 = agitators_election_events.17
			1 = agitators_election_events.18
			1 = agitators_election_events.19
			1 = agitators_election_events.20
			1 = agitators_election_events.21
			1 = agitators_election_events.22
			1 = agitators_election_events.23
			1 = agitators_election_events.24
			1 = agitators_election_events.25
			1 = agitators_election_events.26
			1 = agitators_election_events.27
			1 = agitators_election_events.28
			1 = agitators_election_events.29
			1 = agitators_election_events.30
			1 = agitators_election_events.31
			1 = agitators_election_events.32
			1 = agitators_election_events.33
			1 = agitators_election_events.34
			1 = agitators_election_events.35
			1 = agitators_election_events.36
			1 = agitators_election_events.37
			1 = agitators_election_events.38
			1 = agitators_election_events.39
			1 = agitators_election_events.40
			1 = agitators_election_events.41
			1 = agitators_election_events.42
			1 = agitators_election_events.43
			1 = agitators_election_events.44
			1 = agitators_election_events.45
			1 = agitators_election_events.46
			1 = agitators_election_events.47
			1 = agitators_election_events.48
			1 = agitators_election_events.49
			1 = agitators_election_events.50
		}
		
	}
	
	on_monthly_pulse = {
	
		effect = {
			
			### Fluctuate polls ###
			if = {
				limit = { in_election_campaign = yes }
				calculate_election_momentum_fluctuation = yes
			}
			
		}
		
	}
	
	weight = 100

	should_be_pinned_by_default = yes

	transferable = no

	progressbar = no
}